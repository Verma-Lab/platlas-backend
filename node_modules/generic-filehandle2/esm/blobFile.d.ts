import { GenericFilehandle, FilehandleOptions, Stats } from './filehandle';
/**
 * Blob of binary data fetched from a local file (with FileReader).
 *
 * Adapted by Robert Buels and Garrett Stevens from the BlobFetchable object in
 * the Dalliance Genome Explorer, which is copyright Thomas Down 2006-2011.
 */
export default class BlobFile implements GenericFilehandle {
    private blob;
    private size;
    constructor(blob: Blob);
    read(length: number, position?: number): Promise<Uint8Array<ArrayBuffer>>;
    readFile(): Promise<Uint8Array<ArrayBuffer>>;
    readFile(options: BufferEncoding): Promise<string>;
    readFile<T extends undefined>(options: Omit<FilehandleOptions, 'encoding'> | (Omit<FilehandleOptions, 'encoding'> & {
        encoding: T;
    })): Promise<Uint8Array<ArrayBuffer>>;
    readFile<T extends BufferEncoding>(options: Omit<FilehandleOptions, 'encoding'> & {
        encoding: T;
    }): Promise<string>;
    stat(): Promise<Stats>;
    close(): Promise<void>;
}
