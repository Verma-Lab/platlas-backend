import { GenericFilehandle, FilehandleOptions } from './filehandle';
export default class LocalFile implements GenericFilehandle {
    private filename;
    constructor(source: string, opts?: FilehandleOptions);
    read(length: number, position?: number): Promise<Uint8Array<ArrayBuffer>>;
    readFile(): Promise<Uint8Array<ArrayBuffer>>;
    readFile(options: BufferEncoding): Promise<string>;
    readFile<T extends undefined>(options: Omit<FilehandleOptions, 'encoding'> | (Omit<FilehandleOptions, 'encoding'> & {
        encoding: T;
    })): Promise<Uint8Array<ArrayBuffer>>;
    readFile<T extends BufferEncoding>(options: Omit<FilehandleOptions, 'encoding'> & {
        encoding: T;
    }): Promise<string>;
    stat(): Promise<import("fs").Stats>;
    close(): Promise<void>;
}
