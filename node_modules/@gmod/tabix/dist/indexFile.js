"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class IndexFile {
    constructor({ filehandle, renameRefSeqs = (n) => n, }) {
        this.filehandle = filehandle;
        this.renameRefSeq = renameRefSeqs;
    }
    async getMetadata(opts = {}) {
        const { indices: _indices, ...rest } = await this.parse(opts);
        return rest;
    }
    _findFirstData(currentFdl, virtualOffset) {
        if (currentFdl) {
            return currentFdl.compareTo(virtualOffset) > 0
                ? virtualOffset
                : currentFdl;
        }
        else {
            return virtualOffset;
        }
    }
    async parse(opts = {}) {
        if (!this.parseP) {
            this.parseP = this._parse(opts).catch((e) => {
                this.parseP = undefined;
                throw e;
            });
        }
        return this.parseP;
    }
    async hasRefSeq(seqId, opts = {}) {
        const idx = await this.parse(opts);
        return !!idx.indices[seqId]?.binIndex;
    }
}
exports.default = IndexFile;
//# sourceMappingURL=indexFile.js.map