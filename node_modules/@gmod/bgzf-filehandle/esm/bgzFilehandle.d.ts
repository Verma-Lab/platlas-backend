import { GenericFilehandle } from 'generic-filehandle2';
import GziIndex from './gziIndex';
export default class BgzFilehandle {
    filehandle: GenericFilehandle;
    gzi: GziIndex;
    constructor({ filehandle, path, gziFilehandle, gziPath, }: {
        filehandle?: GenericFilehandle;
        path?: string;
        gziFilehandle?: GenericFilehandle;
        gziPath?: string;
    });
    stat(): Promise<import("generic-filehandle2").Stats & {
        size: any;
        blocks: undefined;
        blksize: undefined;
    }>;
    getUncompressedFileSize(): Promise<any>;
    _readAndUncompressBlock([compressedPosition]: [number], [nextCompressedPosition]: [number]): Promise<Uint8Array<ArrayBuffer>>;
    read(length: number, position: number): Promise<Uint8Array<ArrayBuffer>>;
}
